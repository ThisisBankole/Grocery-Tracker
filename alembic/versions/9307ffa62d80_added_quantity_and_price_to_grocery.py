"""Added quantity and price to Grocery

Revision ID: 9307ffa62d80
Revises: 
Create Date: 2023-08-14 17:20:06.627187

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9307ffa62d80'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import ForeignKeyConstraint
from datetime import datetime

def upgrade():
    # Step 1: Create new table with desired schema
    op.create_table(
        'new_grocery',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('user_id', sa.Integer, sa.ForeignKey('user.id')),  # No NOT NULL here
        sa.Column('item', sa.String, nullable=False),
        sa.Column('timestamp', sa.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow),
        sa.Column('quantity', sa.Integer, nullable=True),
        sa.Column('price', sa.Float, nullable=True),
    )

    # Step 2: Copy data from old table to new table
    op.execute('INSERT INTO new_grocery SELECT * FROM grocery')

    # Step 3: Drop old table and rename new table
    op.drop_table('grocery')
    op.rename_table('new_grocery', 'grocery')

    # Step 4: Recreate foreign keys
    # op.create_foreign_key('fk_user_id', 'grocery', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('grocery', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('grocery', 'price')
    op.drop_column('grocery', 'quantity')
    # ### end Alembic commands ###
